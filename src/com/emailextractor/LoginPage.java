/*
 * This the page for Login with email.
 * This has two text box two button. one button for login and one for help.
 * 
 */
package com.emailextractor;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;

/**
 *
 * @author nishi_000
 */
public class LoginPage extends javax.swing.JFrame {

    private String userName;
    private String password;

    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        containerPanel = new javax.swing.JPanel();
        lable1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        signInBtn = new javax.swing.JButton();
        helpBtn = new javax.swing.JButton();
        gifImage = new javax.swing.JLabel();
        gifImageLable = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sign in to Account");
        setBackground(new java.awt.Color(255, 102, 204));
        setIconImages(null);
        setResizable(false);

        containerPanel.setBackground(new java.awt.Color(102, 102, 102));

        lable1.setFont(new java.awt.Font("Vani", 1, 18)); // NOI18N
        lable1.setForeground(new java.awt.Color(255, 255, 255));
        lable1.setText("Email");

        label2.setFont(new java.awt.Font("Vani", 1, 18)); // NOI18N
        label2.setForeground(new java.awt.Color(255, 255, 255));
        label2.setText("Password");

        emailTextField.setBackground(new java.awt.Color(204, 204, 204));
        emailTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        emailTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        passwordTextField.setBackground(new java.awt.Color(204, 204, 204));
        passwordTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        passwordTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        passwordTextField.setCaretColor(new java.awt.Color(153, 153, 153));

        signInBtn.setBackground(new java.awt.Color(102, 102, 102));
        signInBtn.setFont(signInBtn.getFont().deriveFont(signInBtn.getFont().getStyle() & ~java.awt.Font.BOLD, signInBtn.getFont().getSize()+5));
        signInBtn.setForeground(new java.awt.Color(255, 255, 255));
        signInBtn.setText("Sign in");
        signInBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        signInBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        signInBtn.setFocusPainted(false);
        signInBtn.setFocusable(false);
        signInBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        signInBtn.setRequestFocusEnabled(false);
        signInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInBtnActionPerformed(evt);
            }
        });

        helpBtn.setBackground(new java.awt.Color(102, 102, 102));
        helpBtn.setFont(helpBtn.getFont().deriveFont(helpBtn.getFont().getStyle() & ~java.awt.Font.BOLD, helpBtn.getFont().getSize()+5));
        helpBtn.setForeground(new java.awt.Color(255, 255, 255));
        helpBtn.setText("Help");
        helpBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        helpBtn.setFocusable(false);
        helpBtn.setMaximumSize(new java.awt.Dimension(55, 28));
        helpBtn.setMinimumSize(new java.awt.Dimension(55, 28));
        helpBtn.setRequestFocusEnabled(false);
        helpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBtnActionPerformed(evt);
            }
        });

        gifImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/emailextractor/signLogo.gif"))); // NOI18N
        gifImage.setVisible(false);

        gifImageLable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        gifImageLable.setForeground(new java.awt.Color(255, 255, 255));
        gifImageLable.setText("Signing in...");
        gifImageLable.setVisible(false);

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(gifImageLable)
                    .addComponent(gifImage)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lable1)
                            .addComponent(label2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailTextField)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerPanelLayout.createSequentialGroup()
                                .addComponent(signInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(helpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(31, 31, 31))
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lable1)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(helpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(signInBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(gifImageLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gifImage)
                .addGap(74, 74, 74))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void helpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBtnActionPerformed
        JOptionPane.showMessageDialog(this, "If this is your first sign in to your account \nYou have to chagne some settings from your account \ngo to your email account from a browser \nand change the settings.");        // TODO add your handling code here:
    }//GEN-LAST:event_helpBtnActionPerformed

    private void signInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInBtnActionPerformed

        //Get the email and Password from Text field
        userName = emailTextField.getText();
        password = passwordTextField.getPassword().toString();

        if (userName != null && password != null) {

            signInBtn.setEnabled(false);
            gifImage.setVisible(true);
            gifImageLable.setVisible(true);

            /* Running a Thread that will work for connecting to IMAP server. If connection successfull
            Then MainPage will open. If not then the loging Page will reopen.
            */
            try {
                new Thread() {
                    public void run() {
                        ServerConnection sc = new ServerConnection();
                        try {
                            sc.connectToServer(emailTextField.getText().toString(), new String(passwordTextField.getPassword()));
                            sc.authenTication(emailTextField.getText().toString(), new String(passwordTextField.getPassword()));
                            MainPage mp = new MainPage(sc, userName);
                            mp.setVisible(true);
                        } catch (MessagingException ex) {
                            gifImage.setVisible(false);
                            gifImageLable.setVisible(false);
                            JOptionPane.showMessageDialog(null, "Invalid email or password. \nCheck your email and password");
                            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
                            LoginPage lp = new LoginPage();
                            lp.setVisible(true);
                        } finally {
                            signInBtn.setEnabled(true);
                            dispose(); //finish the loginpage
                        }
                    }
                }.start();
            } catch (Exception ex) {
                Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_signInBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel containerPanel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel gifImage;
    private javax.swing.JLabel gifImageLable;
    private javax.swing.JButton helpBtn;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel lable1;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton signInBtn;
    // End of variables declaration//GEN-END:variables

}
